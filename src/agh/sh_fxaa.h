// this is an autogenerated file -- don't try to edit it!

#pragma once

#include <string>

using std::string;

const string __data_shader_sh_fxaa_vs = 
"#version 330\n"
"in vec2 fragTexCoord;\n"
"in vec4 fragColor;\n"
"\n"
"uniform sampler2D texture0;\n"
"uniform vec2 u_resolution;\n"
"\n"
"out vec4 finalColor;\n"
"\n"
"#define FXAA_REDUCE_MIN (1.0/128.0)\n"
"#define FXAA_REDUCE_MUL (1.0/8.0)\n"
"#define FXAA_SPAN_MAX 8.0\n"
"\n"
"void main() {\n"
"  vec2 st = fragTexCoord;\n"
"  vec2 i_res = vec2(1.0)/u_resolution;\n"
"  vec4 texColor = texture(texture0, st);\n"
"\n"
"  vec2 posOffset = vec2(1.0,1.0)*i_res;\n"
"  vec3 sampleTL = texture2D(texture0, st - posOffset).xyz;\n"
"  vec3 sampleTR = texture2D(texture0, st + vec2(posOffset.x, -posOffset.y)).xyz;\n"
"  vec3 sampleBL = texture2D(texture0, st + vec2(-posOffset.x, posOffset.y)).xyz;\n"
"  vec3 sampleBR = texture2D(texture0, st + posOffset).xyz;\n"
"  vec3 sampleH = texture2D(texture0, st).xyz;\n"
"\n"
"  vec3 luma = vec3(0.299, 0.587, 0.114);\n"
"\n"
"  float lumaTL = dot(sampleTL, luma);\n"
"  float lumaTR = dot(sampleTR, luma);\n"
"  float lumaBL = dot(sampleBL, luma);\n"
"  float lumaBR = dot(sampleBR, luma);\n"
"  float lumaH  = dot(sampleH,  luma);\n"
"  float lumaMin = min(lumaH, min(min(lumaTL, lumaTR), min(lumaBL, lumaBR)));\n"
"  float lumaMax = max(lumaH, max(max(lumaTL, lumaTR), max(lumaBL, lumaBR))); \n"
"  \n"
"  vec2 dir = vec2(-((lumaTL + lumaTR) - (lumaBL + lumaBR)), ((lumaTL + lumaBL) - (lumaTR + lumaBR)));\n"
"  //dir.x = -((lumaTL + lumaTR) - (lumaBL + lumaBR));\n"
"  //dir.y = ((lumaTL + lumaBL) - (lumaTR + lumaBR));\n"
"\n"
"  float dirReduce = max((lumaTL + lumaTR + lumaBL + lumaBR)*(0.25*FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n"
"  float rcpDirMin = 1.0/(min(abs(dir.x), abs(dir.y)) + dirReduce);\n"
"  dir = min(vec2(FXAA_SPAN_MAX),max(vec2(-FXAA_SPAN_MAX), dir*rcpDirMin))*i_res;\n"
"\n"
"  vec3 rgbA = 0.5*(texture2D(texture0, st + dir*(1.0/3.0 - 0.5)).xyz + texture2D(texture0, st + dir*(2.0/3.0 - 0.5)).xyz);\n"
"  vec3 rgbB = rgbA*0.5 + 0.25*(texture2D(texture0, st - dir*0.5).xyz + texture2D(texture0, st + dir*0.5).xyz);\n"
"\n"
"  float lumaB = dot(rgbB, luma);\n"
"\n"
"  finalColor = vec4(((lumaB < lumaMin) || (lumaB > lumaMax)) ? rgbA : rgbB, 1.0);\n"
"}";

