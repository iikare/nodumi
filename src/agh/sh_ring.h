// this is an autogenerated file -- don't try to edit it!

#pragma once

#include <string>

using std::string;

const string __data_shader_sh_ring_vs = 
"#version 330\n"
"\n"
"#define M_PI 3.14159\n"
"\n"
"in vec2 fragTexCoord;\n"
"\n"
"uniform float ring_len;\n"
"uniform float ring_width;\n"
"\n"
"out vec4 finalColor;\n"
"\n"
"vec3 rgb2hsv(vec3 c) {\n"
"    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n"
"    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n"
"    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n"
"\n"
"    float d = q.x - min(q.w, q.y);\n"
"    float e = 1.0e-10;\n"
"    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n"
"}\n"
"\n"
"vec3 hsv2rgb(vec3 c) {\n"
"    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n"
"    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n"
"    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n"
"}\n"
"\n"
"void main() {\n"
"    if (fragTexCoord.x == 0.5 && fragTexCoord.y == 0.5) {\n"
"      discard;\n"
"    }\n"
"    \n"
"    float alpha = 1.0f;\n"
"    float alpha_dist = 0.01f;\n"
"    \n"
"    float dist = distance(fragTexCoord, vec2(0.5f, 0.5f));\n"
"\n"
"    if (dist > ring_len+alpha_dist ||\n"
"        dist < ring_len - ring_width-alpha_dist) {\n"
"      discard;\n"
"    }\n"
"    else if (dist < ring_len+alpha_dist && dist > ring_len) {\n"
"      alpha = (1.0f/alpha_dist)*(ring_len+alpha_dist-dist);\n"
"    }\n"
"    else if (dist > ring_len-ring_width-alpha_dist && dist < ring_len - ring_width) {\n"
"      alpha = (1.0f/alpha_dist)*(dist-(ring_len-ring_width-alpha_dist));\n"
"    }\n"
"    \n"
"    float h = -atan(fragTexCoord.y-0.5, fragTexCoord.x-0.5)/(2*M_PI);\n"
"        \n"
"    finalColor = vec4(hsv2rgb(vec3(h, 1.0f, 1.0f)), alpha);\n"
"}";

